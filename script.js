// Kh·ªüi t·∫°o bi·∫øn
const startDate = new Date("2025-04-11");
const music = document.getElementById('bgMusic');
const musicToggle = document.getElementById('musicToggle');
let musicPlaying = false;

// C√°c c√¢u quote t√¨nh y√™u
const quotes = [
  {
    text: "T√¨nh y√™u kh√¥ng ph·∫£i l√† t√¨m m·ªôt ng∆∞·ªùi ho√†n h·∫£o, m√† l√† h·ªçc c√°ch nh√¨n m·ªôt ng∆∞·ªùi kh√¥ng ho√†n h·∫£o m·ªôt c√°ch ho√†n h·∫£o.",
    author: "Sam Keen"
  },
  {
    text: "Y√™u kh√¥ng ph·∫£i l√† nh√¨n nhau m√† l√† c√πng nh√¨n v·ªÅ m·ªôt h∆∞·ªõng.",
    author: "Antoine de Saint-Exup√©ry"
  },
  {
    text: "T√¨nh y√™u th·ª±c s·ª± b·∫Øt ƒë·∫ßu khi kh√¥ng c√≤n g√¨ ƒë·ªÉ nh·∫≠n, ch·ªâ c√≤n l·∫°i nh·ªØng g√¨ c√≥ th·ªÉ cho ƒëi.",
    author: "Khuy·∫øt danh"
  },
  {
    text: "T√¨nh y√™u l√† khi h·∫°nh ph√∫c c·ªßa ng∆∞·ªùi kh√°c tr·ªü th√†nh h·∫°nh ph√∫c c·ªßa ch√≠nh b·∫°n.",
    author: "Voltaire"
  },
  {
    text: "Y√™u nhau l√† c√πng nhau vi·∫øt n√™n m·ªôt c√¢u chuy·ªán ƒë·∫πp, trang n√†o c≈©ng ng·ªçt ng√†o, ch∆∞∆°ng n√†o c≈©ng h·∫°nh ph√∫c.",
    author: "Khuy·∫øt danh"
  },
  {
    text: "Trong t√¨nh y√™u, s·ª± im l·∫∑ng ƒë√°ng s·ª£ h∆°n c·∫£ s·ª± gi·∫≠n d·ªØ.",
    author: "La Rochefoucauld"
  },
  {
    text: "T√¨nh y√™u kh√¥ng c√≥ tu·ªïi, n√≥ lu√¥n lu√¥n ƒë∆∞·ª£c sinh ra.",
    author: "Blaise Pascal"
  }
];

// C·∫≠p nh·∫≠t b·ªô ƒë·∫øm th·ªùi gian
function updateCountdown() {
  const now = new Date();
  let years = now.getFullYear() - startDate.getFullYear();
  let months = now.getMonth() - startDate.getMonth();
  let days = now.getDate() - startDate.getDate();
  
  // ƒêi·ªÅu ch·ªânh n·∫øu ng√†y √¢m
  if (days < 0) {
    months--;
    days += new Date(now.getFullYear(), now.getMonth(), 0).getDate();
  }
  
  // ƒêi·ªÅu ch·ªânh n·∫øu th√°ng √¢m
  if (months < 0) {
    years--;
    months += 12;
  }
  
  // Hi·ªÉn th·ªã l√™n giao di·ªán
  document.getElementById('years').textContent = years;
  document.getElementById('months').textContent = months;
  document.getElementById('days').textContent = days;
  
  // Th√™m hi·ªáu ·ª©ng khi s·ªë thay ƒë·ªïi
  if (days === 0 && months === 0 && years === 0) {
    document.querySelector('.countdown-box').classList.add('pulse');
    setTimeout(() => {
      document.querySelector('.countdown-box').classList.remove('pulse');
    }, 1000);
  }
}

// Thay ƒë·ªïi quote ng·∫´u nhi√™n
function changeQuote() {
  const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
  const quoteElement = document.getElementById('quote');
  const authorElement = document.getElementById('quoteAuthor');
  
  // Th√™m hi·ªáu ·ª©ng fade out
  quoteElement.style.opacity = 0;
  authorElement.style.opacity = 0;
  
  setTimeout(() => {
    quoteElement.textContent = randomQuote.text;
    authorElement.textContent = randomQuote.author;
    
    // Th√™m hi·ªáu ·ª©ng fade in
    quoteElement.style.opacity = 1;
    authorElement.style.opacity = 1;
  }, 500);
}

// T·∫°o tr√°i tim bay
function createHeart() {
  const heart = document.createElement('div');
  heart.classList.add('heart');
  
  // Random k√≠ch th∆∞·ªõc v√† v·ªã tr√≠
  const size = Math.random() * 15 + 10;
  heart.style.width = `${size}px`;
  heart.style.height = `${size}px`;
  heart.style.left = Math.random() * 100 + 'vw';
  heart.style.animationDuration = (4 + Math.random() * 4) + 's';
  
  // Random m√†u s·∫Øc
  const colors = ['#ff4d6d', '#ff758f', '#ff8fa3', '#ffb3c1'];
  const color = colors[Math.floor(Math.random() * colors.length)];
  heart.style.background = color;
  heart.style.setProperty('--heart-color', color);
  
  document.querySelector('.floating-hearts').appendChild(heart);
  
  // T·ª± ƒë·ªông x√≥a sau khi animation k·∫øt th√∫c
  setTimeout(() => {
    heart.remove();
  }, 6000);
}

// ƒêi·ªÅu khi·ªÉn nh·∫°c n·ªÅn
function toggleMusic() {
  if (musicPlaying) {
    music.pause();
    musicToggle.textContent = 'üéµ B·∫≠t nh·∫°c';
  } else {
    music.play().catch(e => console.log("Autoplay b·ªã ch·∫∑n:", e));
    musicToggle.textContent = 'üîá T·∫Øt nh·∫°c';
  }
  musicPlaying = !musicPlaying;
}

// Th√™m hi·ªáu ·ª©ng khi click
function createClickEffect(e) {
  const effect = document.createElement('div');
  effect.classList.add('heart');
  effect.style.left = e.clientX + 'px';
  effect.style.top = e.clientY + 'px';
  effect.style.width = '25px';
  effect.style.height = '25px';
  effect.style.animationDuration = '1.5s';
  effect.style.background = 'var(--primary)';
  
  document.body.appendChild(effect);
  
  setTimeout(() => {
    effect.remove();
  }, 1500);
}

// Kh·ªüi t·∫°o s·ª± ki·ªán
document.addEventListener('DOMContentLoaded', () => {
  // C·∫≠p nh·∫≠t b·ªô ƒë·∫øm ngay l·∫≠p t·ª©c
  updateCountdown();
  
  // C·∫≠p nh·∫≠t m·ªói gi√¢y
  setInterval(updateCountdown, 1000);
  
  // Thay ƒë·ªïi quote ban ƒë·∫ßu v√† m·ªói 10 gi√¢y
  changeQuote();
  setInterval(changeQuote, 10000);
  
  // T·∫°o tr√°i tim bay m·ªói 0.5 gi√¢y
  setInterval(createHeart, 500);
  
  // S·ª± ki·ªán click ƒë·ªÉ b·∫≠t/t·∫Øt nh·∫°c
  musicToggle.addEventListener('click', toggleMusic);
  
  // S·ª± ki·ªán click tr√™n to√†n trang
  document.addEventListener('click', createClickEffect);
  
  // Th·ª≠ b·∫≠t nh·∫°c t·ª± ƒë·ªông (c√≥ th·ªÉ b·ªã ch·∫∑n b·ªüi tr√¨nh duy·ªát)
  music.play().then(() => {
    musicPlaying = true;
    musicToggle.textContent = 'üîá T·∫Øt nh·∫°c';
  }).catch(e => {
    console.log("Autoplay b·ªã ch·∫∑n:", e);
    musicPlaying = false;
  });
});